@use "sass:map";
@use "sass:list";
@use "uniform/core" as *;

/*
CUSTOM PROPERTIES

--table-radius
--table-shadow
--table-bg

--table-th-height
--table-th-padding
--table-th-bg

--table-td-height
--table-td-padding
--table-td-border

--table-alt-bg

--table-stack-margin

--table-label-margin
--table-label-font-size
--table-label-font-weight
--table-label-text-transform
--table-label-tracking
--table-label-color
*/

@mixin table-stack {
  box-shadow: none;
  background-color: transparent;
  thead {
    display: none;
  }
  tbody {
    display: block;
  }
  tr {
    display: block;
    margin-bottom: var(--table-stack-margin, var(--size-18));
    border-radius: var(--table-radius, var(--radius-sm));
    background-color: var(--table-bg);
    box-shadow: var(--table-shadow, var(--shadow-sm));
    
    &:last-child {
      margin-bottom: 0;
      td:first-child {
        border-bottom-left-radius: 0;
      }
    }
  }
  td {
    display: block;
    padding: var(--table-td-padding, var(--size-12) var(--size-16));
    background-color: var(--table-bg, white);
    &:first-child {
      border-top-right-radius: var(--table-radius, var(--radius-sm));
      border-top-left-radius: var(--table-radius, var(--radius-sm));
    }
    &:last-child {
      border-bottom: 0;
      border-bottom-right-radius: var(--table-radius, var(--radius-sm));
      border-bottom-left-radius: var(--table-radius, var(--radius-sm));
    }
    &[data-table-label] {
      // data label pseudo for responsive table
      &:before {
        display: block;
        content: attr(data-table-label);
        margin-bottom: var(--table-label-margin, var(--size-10));
        font-size: var(--table-label-font-size, var(--font-2xs));
        font-weight: var(--table-label-font-weight, 600);
        text-transform: var(--table-label-text-transform, uppercase);
        letter-spacing: var(--table-label-tracking, var(--tracking-normal));
        white-space: nowrap;
        color: var(--table-label-color, black);
      }
    }
  }
  th,
  td {
    height: auto;
  }
}

@mixin table-unstack {
  box-shadow: var(--table-shadow, var(--shadow-sm));
  background-color: var(--table-bg, white);
  thead {
    display: table-header-group;
  }
  tbody {
    display: table-row-group;
  }
  tr {
    display: table-row;
    margin-bottom: auto;
    border: 0;
    box-shadow: none;
    &:last-child {
      td {
        &:first-child {
          border-bottom-left-radius: var(--table-radius, var(--radius-sm));
        }
        &:last-child {
          border-bottom-right-radius: var(--table-radius, var(--radius-sm));
        }				
      }
    }
  }
  th {
    height: var(--table-th-height, size(12));
    padding: var(--table-th-padding, var(--size-12) var(--size-16));
    &:first-child {
      border-top-left-radius: var(--table-radius, var(--radius-sm));
    }
    &:last-child {
      border-top-right-radius: var(--table-radius, var(--radius-sm));
    }
  }
  td {
    display: table-cell;
    height: var(--table-td-height, size(12));
    padding: var(--table-td-padding, var(--size-12) var(--size-16));
    background-color: transparent;
    box-shadow: var(--table-th-border, inset 0px -1px 0 0 hsl( var(--gray-hue), var(--gray-sat), var(--tint-700) ));
    &:first-child {
      border-radius: 0;
    }
    &:last-child {
      border-radius: 0;
    }
    &[data-table-label] {
      // data label pseudo for responsive table
      &:before {
        display: none;
      }
    }
  }
}

$exclude: map.get($all-config, exclude);
$include: map.get($all-config, include);

@if ( list.index($include, module-table) != null or list.index($exclude, all) == null and list.index($exclude, module-table) == null ) {

  .table {
    width: 100%;
    text-align: left;
    border-radius: var(--table-radius, var(--radius-sm));
    background-color: var(--table-bg, white);
    box-shadow: var(--table-shadow, var(--shadow-sm));
    
    tr {
      &:last-child {
        td {
          border-bottom: 0;
          &:first-child {
            border-bottom-left-radius: var(--table-radius, var(--radius-sm));
          }
          &:last-child {
            border-bottom-right-radius: var(--table-radius, var(--radius-sm));
          }				
        }
      }
    }
    
    th {
      height: var(--table-th-height, size(12));
      padding: var(--table-th-padding, var(--size-12) var(--size-16));
      // Inset instead of border to allow for sticky headers to have border
      box-shadow: var(--table-th-border, inset 0px -1px 0 0 hsl( var(--gray-hue), var(--gray-sat), var(--tint-700) ));
      background: var(--table-th-bg, white);
      white-space: nowrap;
      
      &:first-child {
        border-top-left-radius: var(--table-radius, var(--radius-sm));
      }
      &:last-child {
        border-top-right-radius: var(--table-radius, var(--radius-sm));
      }
    }
  
    td {
      height: var(--table-td-height, size(12));
      padding: var(--table-td-padding, var(--size-12) var(--size-16));
      box-shadow: var(--table-td-border, inset 0px -1px 0 0 hsl( var(--gray-hue), var(--gray-sat), var(--tint-700) ));
    }
  }

  /******************************
  ALTERNATING COLORS
  ******************************/

  .table-alt {
    --table-td-border: 0;
    tbody tr:nth-child(even) {
      background-color: var(--table-alt-bg, hsl( var(--gray-hue), var(--gray-sat), var(--tint-900) ));
    }
  }

  /******************************
  RESPONSIVE
  ******************************/

  .table-stack {
    @include table-stack;
  }

  .table-unstack {
    @include table-unstack;
  }

  @each $screen, $screen-value in screens() {
    @media (min-width: $screen-value) {
      .#{$screen}#{$screen-delimiter}table-stack {
        @include table-stack;
      }
    }
  }

  @each $screen, $screen-value in screens() {
    @media (min-width: $screen-value) {
      .#{$screen}#{$screen-delimiter}table-unstack {
        @include table-unstack;
      }
    }
  }
}
